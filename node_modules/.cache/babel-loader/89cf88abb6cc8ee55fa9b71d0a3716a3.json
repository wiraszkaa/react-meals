{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Java\\\\reactcoursemeals\\\\src\\\\store\\\\cart-items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = /*#__PURE__*/React.createContext({\n  items: [],\n  addItem: item => {},\n  removeItem: id => {},\n  findItem: () => {}\n});\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const prevItem = findItemHandler(item.id);\n\n    if (prevItem === null) {\n      setItems(prev => {\n        return prev.push(item);\n      });\n    } else {\n      setItems(prev => {\n        const index = prev.indexOf(prevItem);\n\n        prev[index] = (_ref => {\n          let {\n            name,\n            price,\n            amount\n          } = _ref;\n          return {\n            name,\n            price,\n            amount: amount + prevItem.amount\n          };\n        })(item);\n\n        return prev;\n      });\n    }\n  }\n\n  if (action.type === \"REMOVE\") {}\n\n  return {\n    items: []\n  };\n};\n\nexport const CartItemsProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, {\n    items: []\n  });\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n    setItems(prev => {\n      return prev.splice(prev.indexOf(item), 1);\n    });\n  };\n\n  const findItemHandler = id => {\n    const array = items.filter(item => item.id === id);\n\n    if (array.length > 0) {\n      return array[0];\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartItems.Provider, {\n    value: {\n      items: cartState.items,\n      addItem: addItemHandler,\n      removeItem: removeItemHandler,\n      findItem: findItemHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartItemsProvider, \"F8df01iExUrpoojIXNClFZQpq3Q=\");\n\n_c = CartItemsProvider;\nexport default CartItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemsProvider\");","map":{"version":3,"sources":["D:/Projekty/Java/reactcoursemeals/src/store/cart-items.js"],"names":["React","useReducer","useState","CartItems","createContext","items","addItem","item","removeItem","id","findItem","cartReducer","state","action","type","prevItem","findItemHandler","setItems","prev","push","index","indexOf","name","price","amount","CartItemsProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","splice","array","filter","length","children"],"mappings":"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","sourcesContent":["import React, {useReducer, useState} from \"react\";\r\n\r\nconst CartItems = React.createContext({\r\n    items: [],\r\n    addItem: (item) => {},\r\n    removeItem: (id) => {},\r\n    findItem: () => {}});\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === \"ADD\") {\r\n        const prevItem = findItemHandler(item.id);\r\n        if(prevItem === null) {\r\n            setItems((prev) => {\r\n                return prev.push(item);\r\n            });\r\n        } else {\r\n            setItems((prev) => {\r\n                const index = prev.indexOf(prevItem);\r\n                prev[index] = (({name, price, amount}) =>\r\n                    ({name, price, amount: amount + prevItem.amount}))(item);\r\n                return prev;\r\n            });\r\n        }\r\n    }\r\n    if (action.type === \"REMOVE\") {\r\n\r\n    }\r\n    return {items: []}\r\n}\r\n\r\nexport const CartItemsProvider = (props) => {\r\n    const [cartState, dispatchCartAction] =  useReducer(cartReducer, {items:[]});\r\n\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({type: \"ADD\", item: item});\r\n    }\r\n\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({type: \"REMOVE\", id: id});\r\n        setItems((prev) => {\r\n            return prev.splice(prev.indexOf(item), 1);\r\n        });\r\n    }\r\n\r\n    const findItemHandler = (id) => {\r\n        const array = items.filter((item) => item.id === id);\r\n        if (array.length > 0) {\r\n            return array[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return <CartItems.Provider value={{\r\n        items: cartState.items,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler,\r\n        findItem: findItemHandler}}>{props.children}</CartItems.Provider>\r\n}\r\n\r\nexport default CartItems;"]},"metadata":{},"sourceType":"module"}