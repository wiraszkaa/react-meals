{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Java\\\\reactcoursemeals\\\\src\\\\store\\\\cart-items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartItems = /*#__PURE__*/React.createContext({\n  items: [],\n  addItem: item => {},\n  removeItem: id => {}\n});\n\nconst cartReducer = (state, action) => {\n  let updatedItems;\n\n  if (action.type === \"ADD\") {\n    const cartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const cartItem = state.items[cartItemIndex];\n\n    if (cartItem) {\n      const updatedItem = { ...cartItem,\n        amount: +action.item.amount + +cartItem.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[cartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const cartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const cartItem = state.items[cartItemIndex];\n\n    if (cartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...cartItem,\n        amount: +cartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[cartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems\n    };\n  }\n\n  return {\n    items: []\n  };\n};\n\nexport const CartItemsProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, {\n    items: []\n  });\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartItems.Provider, {\n    value: {\n      items: cartState.items,\n      addItem: addItemHandler,\n      removeItem: removeItemHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartItemsProvider, \"EfUj5CQvgcxpKmI9qIQtrkUlXIY=\");\n\n_c = CartItemsProvider;\nexport default CartItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemsProvider\");","map":{"version":3,"sources":["D:/Projekty/Java/reactcoursemeals/src/store/cart-items.js"],"names":["React","useReducer","CartItems","createContext","items","addItem","item","removeItem","id","cartReducer","state","action","updatedItems","type","cartItemIndex","findIndex","cartItem","updatedItem","amount","concat","filter","CartItemsProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemHandler","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\nconst CartItems = React.createContext({\r\n    items: [],\r\n    addItem: (item) => {},\r\n    removeItem: (id) => {}\r\n});\r\n\r\nconst cartReducer = (state, action) => {\r\n    let updatedItems;\r\n    if (action.type === \"ADD\") {\r\n        const cartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n        const cartItem = state.items[cartItemIndex];\r\n        if (cartItem) {\r\n            const updatedItem = {\r\n                ...cartItem,\r\n                amount: +action.item.amount + +cartItem.amount\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[cartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        return {items: updatedItems};\r\n    }\r\n    if (action.type === \"REMOVE\") {\r\n        const cartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n        const cartItem = state.items[cartItemIndex];\r\n        if (cartItem.amount === 1) {\r\n            updatedItems = state.items.filter((item) => item.id !== action.id);\r\n        } else {\r\n            const updatedItem = {\r\n                ...cartItem,\r\n                amount: +cartItem.amount - 1\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[cartItemIndex] = updatedItem;\r\n        }\r\n        return {items: updatedItems};\r\n    }\r\n    return {items: []}\r\n}\r\n\r\nexport const CartItemsProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, {items: []});\r\n\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({type: \"ADD\", item: item});\r\n    }\r\n\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({type: \"REMOVE\", id: id});\r\n    }\r\n\r\n    return <CartItems.Provider value={{\r\n        items: cartState.items,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }}>{props.children}</CartItems.Provider>\r\n}\r\n\r\nexport default CartItems;"]},"metadata":{},"sourceType":"module"}