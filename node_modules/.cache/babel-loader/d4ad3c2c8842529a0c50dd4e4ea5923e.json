{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Java\\\\React Course\\\\react-meals-http\\\\src\\\\components\\\\Cart\\\\Checkout\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport cartClasses from \"../../Header/HeaderCartButton/HeaderCartButton.module.css\";\nimport useInput from \"../../../hooks/use-input\";\nimport { useContext } from \"react\";\nimport CartItems from \"../../../store/cart-items\";\nimport useHttp from \"../../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const cartItems = useContext(CartItems).items;\n  const {\n    isLoading,\n    error,\n    sendRequest\n  } = useHttp();\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(name => name.trim() !== '');\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n\n  const {\n    value: enteredAddress,\n    isValid: addressIsValid,\n    hasError: addressHasError,\n    valueChangeHandler: addressChangeHandler,\n    inputBlurHandler: addressInputBlurHandler,\n    reset: resetAddressInput\n  } = useInput(address => address.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput(validateEmail);\n  let formIsValid = false;\n\n  if (nameIsValid && addressIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onClose();\n\n    if (nameHasError || addressHasError || emailHasError) {\n      return;\n    }\n\n    const order = {\n      name: enteredName,\n      address: enteredAddress,\n      email: enteredEmail,\n      orderItems: cartItems\n    };\n    const requestConfig = {\n      url: \"https://react-http-a39f2-default-rtdb.firebaseio.com/orders.json\",\n      method: 'POST',\n      body: order,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    sendRequest(requestConfig, data => console.log(data));\n    resetNameInput();\n    resetAddressInput();\n    resetEmailInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['control-group'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes['form-control']} ${nameHasError && classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: enteredName,\n            onChange: nameChangeHandler,\n            onBlur: nameInputBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Full Name must not be empty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes['form-control']} ${addressHasError && classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"address\",\n            value: enteredAddress,\n            onChange: addressChangeHandler,\n            onBlur: addressInputBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Address is invalid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${classes['form-control']} ${emailHasError && classes.invalid}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-Mail Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            value: enteredEmail,\n            onChange: emailChangeHandler,\n            onBlur: emailInputBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes['error-text'],\n            children: \"Email is invalid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['form-actions'],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          className: cartClasses.button,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Something went wrong.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Checkout, \"iNHikzdFbrxIIGmIjDOJDiiRobM=\", false, function () {\n  return [useHttp, useInput, useInput, useInput];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/Projekty/Java/React Course/react-meals-http/src/components/Cart/Checkout/Checkout.js"],"names":["classes","cartClasses","useInput","useContext","CartItems","useHttp","Checkout","props","cartItems","items","isLoading","error","sendRequest","value","enteredName","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","reset","resetNameInput","name","trim","validateEmail","email","String","toLowerCase","match","enteredAddress","addressIsValid","addressHasError","addressChangeHandler","addressInputBlurHandler","resetAddressInput","address","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailInputBlurHandler","resetEmailInput","formIsValid","submitHandler","event","preventDefault","onClose","order","orderItems","requestConfig","url","method","body","headers","data","console","log","invalid","button"],"mappings":"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","sourcesContent":["import classes from \"./Checkout.module.css\";\r\nimport cartClasses from \"../../Header/HeaderCartButton/HeaderCartButton.module.css\"\r\nimport useInput from \"../../../hooks/use-input\";\r\nimport {useContext} from \"react\";\r\nimport CartItems from \"../../../store/cart-items\";\r\nimport useHttp from \"../../../hooks/use-http\";\r\n\r\n\r\nconst Checkout = (props) => {\r\n    const cartItems = useContext(CartItems).items;\r\n\r\n    const {\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n    } = useHttp();\r\n\r\n    const {\r\n        value: enteredName,\r\n        isValid: nameIsValid,\r\n        hasError: nameHasError,\r\n        valueChangeHandler: nameChangeHandler,\r\n        inputBlurHandler: nameInputBlurHandler,\r\n        reset: resetNameInput,\r\n    } = useInput((name) => name.trim() !== '');\r\n\r\n    const validateEmail = (email) => {\r\n        return String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            );\r\n    };\r\n\r\n    const {\r\n        value: enteredAddress,\r\n        isValid: addressIsValid,\r\n        hasError: addressHasError,\r\n        valueChangeHandler: addressChangeHandler,\r\n        inputBlurHandler: addressInputBlurHandler,\r\n        reset: resetAddressInput,\r\n    } = useInput((address) => address.trim() !== '');\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: emailIsValid,\r\n        hasError: emailHasError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailInputBlurHandler,\r\n        reset: resetEmailInput,\r\n    } = useInput(validateEmail);\r\n\r\n    let formIsValid = false;\r\n    if (nameIsValid && addressIsValid && emailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.onClose();\r\n\r\n        if (nameHasError || addressHasError || emailHasError) {\r\n            return;\r\n        }\r\n\r\n        const order = {\r\n            name: enteredName,\r\n            address: enteredAddress,\r\n            email: enteredEmail,\r\n            orderItems: cartItems,\r\n        };\r\n\r\n        const requestConfig = {\r\n            url: \"https://react-http-a39f2-default-rtdb.firebaseio.com/orders.json\",\r\n            method: 'POST',\r\n            body: order,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        sendRequest(requestConfig, (data) => console.log(data));\r\n\r\n        resetNameInput();\r\n        resetAddressInput();\r\n        resetEmailInput();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitHandler}>\r\n                <div className={classes['control-group']}>\r\n                    <div className={`${classes['form-control']} ${nameHasError && classes.invalid}`}>\r\n                        <label htmlFor='name'>Full Name</label>\r\n                        <input\r\n                            type='text'\r\n                            id='name'\r\n                            value={enteredName}\r\n                            onChange={nameChangeHandler}\r\n                            onBlur={nameInputBlurHandler}\r\n                        />\r\n                        {nameHasError && <p className={classes['error-text']}>Full Name must not be empty.</p>}\r\n                    </div>\r\n                    <div className={`${classes['form-control']} ${addressHasError && classes.invalid}`}>\r\n                        <label htmlFor='address'>Address</label>\r\n                        <input\r\n                            type='text'\r\n                            id='address'\r\n                            value={enteredAddress}\r\n                            onChange={addressChangeHandler}\r\n                            onBlur={addressInputBlurHandler}\r\n                        />\r\n                        {addressHasError && <p className={classes['error-text']}>Address is invalid.</p>}\r\n                    </div>\r\n                    <div className={`${classes['form-control']} ${emailHasError && classes.invalid}`}>\r\n                        <label htmlFor='email'>E-Mail Address</label>\r\n                        <input\r\n                            type='text'\r\n                            id='email'\r\n                            value={enteredEmail}\r\n                            onChange={emailChangeHandler}\r\n                            onBlur={emailInputBlurHandler}\r\n                        />\r\n                        {emailHasError && <p className={classes['error-text']}>Email is invalid.</p>}\r\n                    </div>\r\n                </div>\r\n                <div className={classes['form-actions']}>\r\n                    <button disabled={!formIsValid} className={cartClasses.button}>Confirm</button>\r\n                </div>\r\n            </form>\r\n            {isLoading && <p>Loading...</p>}\r\n            {error && <p>Something went wrong.</p>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}