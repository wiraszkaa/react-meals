{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Java\\\\React Course\\\\react-meals-http\\\\src\\\\components\\\\Cart\\\\Checkout\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport cartClasses from \"../../Header/HeaderCartButton/HeaderCartButton.module.css\";\nimport useInput from \"../../../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkout = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    isValid: nameIsValid,\n    hasError: nameHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameInputBlurHandler,\n    reset: resetNameInput\n  } = useInput(name => name.trim() !== '');\n\n  const validateEmail = email => {\n    return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n  };\n\n  const {\n    value: enteredAddress,\n    isValid: addressIsValid,\n    hasError: addressHasError,\n    valueChangeHandler: addressChangeHandler,\n    inputBlurHandler: addressInputBlurHandler,\n    reset: resetAddressInput\n  } = useInput(address => address.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailInputBlurHandler,\n    reset: resetEmailInput\n  } = useInput(validateEmail);\n  let formIsValid = false;\n\n  if (nameIsValid && addressIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onClose();\n\n    if (nameHasError || addressHasError || emailHasError) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      address: enteredAddress,\n      email: enteredEmail\n    });\n    resetNameInput();\n    resetAddressInput();\n    resetEmailInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['control-group'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes['form-control']} ${nameHasError && classes.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredName,\n          onChange: nameChangeHandler,\n          onBlur: nameInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Full Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes['form-control']} ${addressHasError && classes.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          value: enteredAddress,\n          onChange: addressChangeHandler,\n          onBlur: addressInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Address is invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes['form-control']} ${emailHasError && classes.invalid}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: emailInputBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes['error-text'],\n          children: \"Email is invalid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['form-actions'],\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        className: cartClasses.button,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"4pTOqE/T755goXYfd8DPPuzLGAk=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["D:/Projekty/Java/React Course/react-meals-http/src/components/Cart/Checkout/Checkout.js"],"names":["classes","cartClasses","useInput","Checkout","props","value","enteredName","isValid","nameIsValid","hasError","nameHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameInputBlurHandler","reset","resetNameInput","name","trim","validateEmail","email","String","toLowerCase","match","enteredAddress","addressIsValid","addressHasError","addressChangeHandler","addressInputBlurHandler","resetAddressInput","address","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailInputBlurHandler","resetEmailInput","formIsValid","submitHandler","event","preventDefault","onClose","onConfirm","invalid","button"],"mappings":"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","sourcesContent":["import classes from \"./Checkout.module.css\";\r\nimport cartClasses from \"../../Header/HeaderCartButton/HeaderCartButton.module.css\"\r\nimport useInput from \"../../../hooks/use-input\";\r\n\r\nconst Checkout = (props) => {\r\n    const {\r\n        value: enteredName,\r\n        isValid: nameIsValid,\r\n        hasError: nameHasError,\r\n        valueChangeHandler: nameChangeHandler,\r\n        inputBlurHandler: nameInputBlurHandler,\r\n        reset: resetNameInput,\r\n    } = useInput((name) => name.trim() !== '');\r\n\r\n    const validateEmail = (email) => {\r\n        return String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            );\r\n    };\r\n\r\n    const {\r\n        value: enteredAddress,\r\n        isValid: addressIsValid,\r\n        hasError: addressHasError,\r\n        valueChangeHandler: addressChangeHandler,\r\n        inputBlurHandler: addressInputBlurHandler,\r\n        reset: resetAddressInput,\r\n    } = useInput((address) => address.trim() !== '');\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: emailIsValid,\r\n        hasError: emailHasError,\r\n        valueChangeHandler: emailChangeHandler,\r\n        inputBlurHandler: emailInputBlurHandler,\r\n        reset: resetEmailInput,\r\n    } = useInput(validateEmail);\r\n\r\n    let formIsValid = false;\r\n    if (nameIsValid && addressIsValid && emailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.onClose();\r\n\r\n        if (nameHasError || addressHasError || emailHasError) {\r\n            return;\r\n        }\r\n\r\n        props.onConfirm({\r\n            name: enteredName,\r\n            address: enteredAddress,\r\n            email: enteredEmail,\r\n        });\r\n\r\n        resetNameInput();\r\n        resetAddressInput();\r\n        resetEmailInput();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className={classes['control-group']}>\r\n                <div className={`${classes['form-control']} ${nameHasError && classes.invalid}`}>\r\n                    <label htmlFor='name'>Full Name</label>\r\n                    <input\r\n                        type='text'\r\n                        id='name'\r\n                        value={enteredName}\r\n                        onChange={nameChangeHandler}\r\n                        onBlur={nameInputBlurHandler}\r\n                    />\r\n                    {nameHasError && <p className={classes['error-text']}>Full Name must not be empty.</p>}\r\n                </div>\r\n                <div className={`${classes['form-control']} ${addressHasError && classes.invalid}`}>\r\n                    <label htmlFor='address'>Address</label>\r\n                    <input\r\n                        type='text'\r\n                        id='address'\r\n                        value={enteredAddress}\r\n                        onChange={addressChangeHandler}\r\n                        onBlur={addressInputBlurHandler}\r\n                    />\r\n                    {addressHasError && <p className={classes['error-text']}>Address is invalid.</p>}\r\n                </div>\r\n                <div className={`${classes['form-control']} ${emailHasError && classes.invalid}`}>\r\n                    <label htmlFor='email'>E-Mail Address</label>\r\n                    <input\r\n                        type='text'\r\n                        id='email'\r\n                        value={enteredEmail}\r\n                        onChange={emailChangeHandler}\r\n                        onBlur={emailInputBlurHandler}\r\n                    />\r\n                    {emailHasError && <p className={classes['error-text']}>Email is invalid.</p>}\r\n                </div>\r\n            </div>\r\n            <div className={classes['form-actions']}>\r\n                <button disabled={!formIsValid} className={cartClasses.button}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}